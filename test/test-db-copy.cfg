process TEST =
{
  include "FWCore/MessageService/data/MessageLogger.cfi"

  untracked PSet maxEvents = { untracked int32 input = 1 }
  source = EmptySource { }

  es_source = PoolDBESSource { 
      VPSet toGet = 
      {
            { string record = "DTAlignmentRcd" string tag       = "dtTracksAlignments" },
            { string record = "DTAlignmentErrorRcd" string tag  = "dtTracksAlignmentErrors" },
            { string record = "CSCAlignmentRcd" string tag      = "cscTracksAlignments" },
            { string record = "CSCAlignmentErrorRcd" string tag = "cscTracksAlignmentErrors" }
      }
      bool loadAll = true
      string connect = "sqlite_file:Alignments.db"
      untracked string catalog = "file:condbcatalog.xml"
      untracked uint32 authenticationMethod = 1
      string timetype = "runnumber"
      untracked uint32 messagelevel = 2 
   }

   service = PoolDBOutputService
   {
        string connect = "sqlite_file:dataout.db"
        untracked string catalog = "file:catalogout.xml"
        untracked uint32 authenticationMethod = 1
        string timetype = "runnumber"
        VPSet toPut =
        {
            { untracked string containerName = "dtAlignments" string tag = "dtTracksAlignments" },
            { untracked string containerName = "dtAlignmentErrors" string tag = "dtTracksAlignmentErrors" },
            { untracked string containerName = "cscAlignments" string tag = "cscTracksAlignments" },
            { untracked string containerName = "cscAlignmentErrors" string tag = "cscTracksAlignmentErrors" }
        }
    }

    module dbCopy = MuonAlignmentDBCopy { }

   path p = { dbCopy }

}

