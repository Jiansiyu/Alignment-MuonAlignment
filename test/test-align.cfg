process TEST = {

  // -- Load default module/services configurations -- //

  // Message logger service
  include "FWCore/MessageService/data/MessageLogger.cfi"
  replace MessageLogger.cout.default.limit = 100000

  // Ideal DT & CSC geometry 
  include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"


  // -- Specific configurations -- //

  // Empty event source
  untracked PSet maxEvents = { untracked int32 input = 1 }
  source = EmptySource { }

  // Database output service
  include "CondCore/DBCommon/data/CondDBCommon.cfi"

  replace CondDBCommon.connect = "sqlite_file:Alignments.db"    
  replace CondDBCommon.catalog = "file:conddbcatalog.xml"

#  replace CondDBCommon.connect = "oracle://devdb10/CMS_COND_ALIGNMENT"
#  replace CondDBCommon.catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"

  service = PoolDBOutputService {

    using CondDBCommon
    VPSet toPut = {

          { string record = "DTAlignmentRcd"       string tag = "DTAlignments" },
          { string record = "DTAlignmentErrorRcd"  string tag = "DTAlignmentErrors" },
          { string record = "CSCAlignmentRcd"      string tag = "CSCAlignments" },
          { string record = "CSCAlignmentErrorRcd" string tag = "CSCAlignmentErrors" }


    }

  }

  // Save Alignments into DB
  replace MisalignedMuon.saveToDbase = true

  // Test module
  module prod =  TestAlign { untracked string fileName = "align.root" }
  
  path p1 = { prod }      
  

}
