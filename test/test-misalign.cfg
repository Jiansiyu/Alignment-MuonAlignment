process TEST = {

  // -- Load default module/services configurations -- //

  // Message logger service
  include "FWCore/MessageService/data/MessageLogger.cfi"
  replace MessageLogger.cout.default.limit = 1000000

  // Ideal DT & CSC geometry 
  include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
  include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"

  // -- Specific configurations -- //

  // Empty event source
  untracked PSet maxEvents = { untracked int32 input = 1 }
  source = EmptySource { }

  // Database output service
  include "CondCore/DBCommon/data/CondDBCommon.cfi"

  replace CondDBCommon.connect = "sqlite_file:Alignments.db"    
  replace CondDBCommon.catalog = "file:conddbcatalog.xml"

#  replace CondDBCommon.connect = "oracle://devdb10/CMS_COND_ALIGNMENT"
#  replace CondDBCommon.catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"

  service = PoolDBOutputService {

    using CondDBCommon
    VPSet toPut = {

#          { string record = "DTAlignmentRcd"       string tag = "DTShortTermScenario" },
#          { string record = "DTAlignmentErrorRcd"  string tag = "DTShortTermScenarioErrors" },
#          { string record = "CSCAlignmentRcd"      string tag = "CSCShortTermScenario" },
#          { string record = "CSCAlignmentErrorRcd" string tag = "CSCShortTermScenarioErrors" }

          { string record = "DTAlignmentRcd"       string tag = "DTLongTermScenario" },
          { string record = "DTAlignmentErrorRcd"  string tag = "DTLongTermScenarioErrors" },
          { string record = "CSCAlignmentRcd"      string tag = "CSCLongTermScenario" },
          { string record = "CSCAlignmentErrorRcd" string tag = "CSCLongTermScenarioErrors" }

#          { string record = "DTAlignmentRcd"       string tag = "DTSurveyOnlyScenario" },
#          { string record = "DTAlignmentErrorRcd"  string tag = "DTSurveyOnlyScenarioErrors" },
#          { string record = "CSCAlignmentRcd"      string tag = "CSCSurveyOnlyScenario" },
#          { string record = "CSCAlignmentErrorRcd" string tag = "CSCSurveyOnlyScenarioErrors" }

    }

  }

  // Misalignment example scenario producer
#  include "Alignment/MuonAlignment/data/MuonShortTermScenario.cff"
#  include "Alignment/MuonAlignment/data/MuonLongTermScenario.cff"
  include "Alignment/MuonAlignment/data/MuonSurveyOnlyScenario.cff"
#   include "Alignment/MuonAlignment/data/ExampleScenario.cff"

  replace MisalignedMuon.saveToDbase = true

  // Test module
  module prod =  TestMisalign { untracked string fileName = "misaligment.root" }
  
  path p1 = { prod }      
  

}
